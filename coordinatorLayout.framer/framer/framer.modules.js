require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"coordinatorLayout":[function(require,module,exports){
var lastY;

exports.coordinatorLayout = null;

exports.scrollview = null;

exports.scrollDirection = {
  UP: "up",
  DOWN: "down"
};

exports.scrollBehaviour = {
  AWAY: 0,
  RETURN: 1
};

lastY = 0;

exports.make = function() {
  var coordinatorLayout, scrollview;
  coordinatorLayout = new Layer({
    width: Screen.width,
    height: Screen.height,
    backgroundColor: "transparent",
    name: "coordinatorLayout"
  });
  coordinatorLayout.scrollingChildren = [];
  scrollview = new ScrollComponent({
    width: Screen.width,
    height: Screen.height,
    scrollHorizontal: false,
    name: "scrollview",
    parent: coordinatorLayout
  });
  coordinatorLayout.scrollview = scrollview;
  scrollview.content.on("change:y", function() {
    var deltaY, i, item, len, ref, scrollY;
    scrollY = Math.max(Math.min(scrollview.scrollY, scrollview.content.height - scrollview.height), 0);
    deltaY = scrollY - lastY;
    ref = coordinatorLayout.scrollingChildren;
    for (i = 0, len = ref.length; i < len; i++) {
      item = ref[i];
      if (item.scrollDirection === exports.scrollDirection.UP && item.scrollBehaviour === exports.scrollBehaviour.RETURN) {
        item.y = Math.min(Math.max(item.y - deltaY, item.stickyPoint), Math.max(-scrollY + item.startY, item.returnY));
      } else if (item.scrollDirection === exports.scrollDirection.UP && item.scrollBehaviour === exports.scrollBehaviour.AWAY) {
        item.y = Math.max(-scrollY + item.startY, item.stickyPoint);
      } else if (item.scrollDirection === exports.scrollDirection.DOWN && item.scrollBehaviour === exports.scrollBehaviour.RETURN) {
        item.y = Math.max(Math.min(item.y + deltaY, item.stickyPoint), Math.min(scrollY + item.startY, item.returnY));
      } else if (item.scrollDirection === exports.scrollDirection.DOWN && item.scrollBehaviour === exports.scrollBehaviour.AWAY) {
        item.y = Math.min(scrollY + item.startY, item.stickyPoint);
      }
    }
    return lastY = scrollY;
  });
  exports.coordinatorLayout = coordinatorLayout;
  return exports.scrollview = scrollview;
};

exports.addScrollingChild = function(item, direction, stickyPoint, scrollBehaviour, returnY) {
  if (direction == null) {
    direction = exports.scrollDirection.UP;
  }
  if (stickyPoint == null) {
    stickyPoint = item.height * -1;
  }
  if (scrollBehaviour == null) {
    scrollBehaviour = exports.scrollBehaviour.AWAY;
  }
  if (returnY == null) {
    returnY = 0;
  }
  item.scrollDirection = direction;
  item.stickyPoint = stickyPoint;
  item.scrollBehaviour = scrollBehaviour;
  item.startY = item.y;
  item.returnY = returnY;
  exports.coordinatorLayout.scrollingChildren.push(item);
  return exports.coordinatorLayout.addChild(item);
};


},{}],"myModule":[function(require,module,exports){
exports.myVar = "myVariable";

exports.myFunction = function() {
  return print("myFunction is running");
};

exports.myArray = [1, 2, 3];


},{}]},{},[])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
