require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"coordinatorLayout":[function(require,module,exports){
var lastY;

exports.coordinatorLayout = null;

exports.scrollview = null;

exports.scrollDirection = {
  UP: "up",
  DOWN: "down"
};

exports.scrollBehaviour = {
  AWAY: 0,
  RETURN: 1
};

lastY = 0;

exports.make = function() {
  var coordinatorLayout, scrollview;
  coordinatorLayout = new Layer({
    width: Screen.width,
    height: Screen.height,
    backgroundColor: "transparent",
    name: "coordinatorLayout"
  });
  coordinatorLayout.scrollingChildren = [];
  scrollview = new ScrollComponent({
    width: Screen.width,
    height: Screen.height,
    scrollHorizontal: false,
    name: "scrollview",
    parent: coordinatorLayout
  });
  coordinatorLayout.scrollview = scrollview;
  scrollview.content.on("change:y", function() {
    var deltaY, i, item, len, ref, scrollY;
    scrollY = Math.max(Math.min(scrollview.scrollY, scrollview.content.height - scrollview.height), 0);
    deltaY = scrollY - lastY;
    ref = coordinatorLayout.scrollingChildren;
    for (i = 0, len = ref.length; i < len; i++) {
      item = ref[i];
      if (item.scrollDirection === exports.scrollDirection.UP && item.scrollBehaviour === exports.scrollBehaviour.RETURN) {
        item.y = Math.min(Math.max(item.y - deltaY, item.stickyPoint), Math.max(-scrollY + item.startY, item.returnY));
      } else if (item.scrollDirection === exports.scrollDirection.UP && item.scrollBehaviour === exports.scrollBehaviour.AWAY) {
        item.y = Math.max(-scrollY + item.startY, item.stickyPoint);
      }
    }
    return lastY = scrollY;
  });
  exports.coordinatorLayout = coordinatorLayout;
  return exports.scrollview = scrollview;
};

exports.addScrollingChild = function(item, direction, stickyPoint, scrollBehaviour, returnY) {
  if (direction == null) {
    direction = exports.scrollDirection.UP;
  }
  if (stickyPoint == null) {
    stickyPoint = item.height * -1;
  }
  if (scrollBehaviour == null) {
    scrollBehaviour = exports.scrollBehaviour.AWAY;
  }
  if (returnY == null) {
    returnY = 0;
  }
  item.scrollDirection = direction;
  item.stickyPoint = stickyPoint;
  item.scrollBehaviour = scrollBehaviour;
  item.startY = item.y;
  item.returnY = returnY;
  exports.coordinatorLayout.scrollingChildren.push(item);
  return exports.coordinatorLayout.addChild(item);
};


},{}],"myModule":[function(require,module,exports){
exports.myVar = "myVariable";

exports.myFunction = function() {
  return print("myFunction is running");
};

exports.myArray = [1, 2, 3];


},{}]},{},[])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCIvVXNlcnMveWFzaW4vU2l0ZXMvRnJhbWVyIE1vZHVsZXMvY29vcmRpbmF0b3JMYXlvdXQuZnJhbWVyL21vZHVsZXMvY29vcmRpbmF0b3JMYXlvdXQuY29mZmVlIiwiL1VzZXJzL3lhc2luL1NpdGVzL0ZyYW1lciBNb2R1bGVzL2Nvb3JkaW5hdG9yTGF5b3V0LmZyYW1lci9tb2R1bGVzL215TW9kdWxlLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQ01BLElBQUE7O0FBQUEsT0FBTyxDQUFDLGlCQUFSLEdBQTRCOztBQUM1QixPQUFPLENBQUMsVUFBUixHQUFxQjs7QUFFckIsT0FBTyxDQUFDLGVBQVIsR0FDQztFQUFBLEVBQUEsRUFBSSxJQUFKO0VBQ0EsSUFBQSxFQUFNLE1BRE47OztBQUdELE9BQU8sQ0FBQyxlQUFSLEdBQ0M7RUFBQSxJQUFBLEVBQU0sQ0FBTjtFQUNBLE1BQUEsRUFBUSxDQURSOzs7QUFJRCxLQUFBLEdBQVE7O0FBRVIsT0FBTyxDQUFDLElBQVIsR0FBZSxTQUFBO0FBQ2QsTUFBQTtFQUFBLGlCQUFBLEdBQXdCLElBQUEsS0FBQSxDQUN2QjtJQUFBLEtBQUEsRUFBTyxNQUFNLENBQUMsS0FBZDtJQUNBLE1BQUEsRUFBUSxNQUFNLENBQUMsTUFEZjtJQUVBLGVBQUEsRUFBaUIsYUFGakI7SUFHQSxJQUFBLEVBQU0sbUJBSE47R0FEdUI7RUFNeEIsaUJBQWlCLENBQUMsaUJBQWxCLEdBQXNDO0VBRXRDLFVBQUEsR0FBaUIsSUFBQSxlQUFBLENBQ2hCO0lBQUEsS0FBQSxFQUFPLE1BQU0sQ0FBQyxLQUFkO0lBQ0EsTUFBQSxFQUFRLE1BQU0sQ0FBQyxNQURmO0lBRUEsZ0JBQUEsRUFBa0IsS0FGbEI7SUFHQSxJQUFBLEVBQU0sWUFITjtJQUlBLE1BQUEsRUFBUSxpQkFKUjtHQURnQjtFQU9qQixpQkFBaUIsQ0FBQyxVQUFsQixHQUErQjtFQUUvQixVQUFVLENBQUMsT0FBTyxDQUFDLEVBQW5CLENBQXNCLFVBQXRCLEVBQWtDLFNBQUE7QUFDakMsUUFBQTtJQUFBLE9BQUEsR0FBVSxJQUFJLENBQUMsR0FBTCxDQUFTLElBQUksQ0FBQyxHQUFMLENBQVMsVUFBVSxDQUFDLE9BQXBCLEVBQTZCLFVBQVUsQ0FBQyxPQUFPLENBQUMsTUFBbkIsR0FBMEIsVUFBVSxDQUFDLE1BQWxFLENBQVQsRUFBb0YsQ0FBcEY7SUFDVixNQUFBLEdBQVMsT0FBQSxHQUFVO0FBSW5CO0FBQUEsU0FBQSxxQ0FBQTs7TUFFQyxJQUFHLElBQUksQ0FBQyxlQUFMLEtBQXdCLE9BQU8sQ0FBQyxlQUFlLENBQUMsRUFBaEQsSUFBc0QsSUFBSSxDQUFDLGVBQUwsS0FBd0IsT0FBTyxDQUFDLGVBQWUsQ0FBQyxNQUF6RztRQUNDLElBQUksQ0FBQyxDQUFMLEdBQVMsSUFBSSxDQUFDLEdBQUwsQ0FBUyxJQUFJLENBQUMsR0FBTCxDQUFTLElBQUksQ0FBQyxDQUFMLEdBQU8sTUFBaEIsRUFBd0IsSUFBSSxDQUFDLFdBQTdCLENBQVQsRUFBb0QsSUFBSSxDQUFDLEdBQUwsQ0FBUyxDQUFDLE9BQUQsR0FBUyxJQUFJLENBQUMsTUFBdkIsRUFBK0IsSUFBSSxDQUFDLE9BQXBDLENBQXBELEVBRFY7T0FBQSxNQUdLLElBQUcsSUFBSSxDQUFDLGVBQUwsS0FBd0IsT0FBTyxDQUFDLGVBQWUsQ0FBQyxFQUFoRCxJQUFzRCxJQUFJLENBQUMsZUFBTCxLQUF3QixPQUFPLENBQUMsZUFBZSxDQUFDLElBQXpHO1FBQ0osSUFBSSxDQUFDLENBQUwsR0FBUyxJQUFJLENBQUMsR0FBTCxDQUFTLENBQUMsT0FBRCxHQUFTLElBQUksQ0FBQyxNQUF2QixFQUErQixJQUFJLENBQUMsV0FBcEMsRUFETDs7QUFMTjtXQVNBLEtBQUEsR0FBUTtFQWZ5QixDQUFsQztFQW9CQSxPQUFPLENBQUMsaUJBQVIsR0FBNEI7U0FDNUIsT0FBTyxDQUFDLFVBQVIsR0FBcUI7QUF2Q1A7O0FBMENmLE9BQU8sQ0FBQyxpQkFBUixHQUE0QixTQUFDLElBQUQsRUFBTyxTQUFQLEVBQWdELFdBQWhELEVBQThFLGVBQTlFLEVBQThILE9BQTlIOztJQUFPLFlBQWEsT0FBTyxDQUFDLGVBQWUsQ0FBQzs7O0lBQUksY0FBYyxJQUFJLENBQUMsTUFBTCxHQUFZLENBQUM7OztJQUFHLGtCQUFrQixPQUFPLENBQUMsZUFBZSxDQUFDOzs7SUFBTSxVQUFVOztFQUNuSyxJQUFJLENBQUMsZUFBTCxHQUF1QjtFQUN2QixJQUFJLENBQUMsV0FBTCxHQUFtQjtFQUNuQixJQUFJLENBQUMsZUFBTCxHQUF1QjtFQUN2QixJQUFJLENBQUMsTUFBTCxHQUFjLElBQUksQ0FBQztFQUNuQixJQUFJLENBQUMsT0FBTCxHQUFlO0VBQ2YsT0FBTyxDQUFDLGlCQUFpQixDQUFDLGlCQUFpQixDQUFDLElBQTVDLENBQWlELElBQWpEO1NBQ0EsT0FBTyxDQUFDLGlCQUFpQixDQUFDLFFBQTFCLENBQW1DLElBQW5DO0FBUDJCOzs7O0FDMUQ1QixPQUFPLENBQUMsS0FBUixHQUFnQjs7QUFFaEIsT0FBTyxDQUFDLFVBQVIsR0FBcUIsU0FBQTtTQUNwQixLQUFBLENBQU0sdUJBQU47QUFEb0I7O0FBR3JCLE9BQU8sQ0FBQyxPQUFSLEdBQWtCLENBQUMsQ0FBRCxFQUFJLENBQUosRUFBTyxDQUFQIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIiMgQWRkIHRoZSBmb2xsb3dpbmcgbGluZSB0byB5b3VyIHByb2plY3QgaW4gRnJhbWVyIFN0dWRpby4gXG4jIG15TW9kdWxlID0gcmVxdWlyZSBcIm15TW9kdWxlXCJcbiMgUmVmZXJlbmNlIHRoZSBjb250ZW50cyBieSBuYW1lLCBsaWtlIG15TW9kdWxlLm15RnVuY3Rpb24oKSBvciBteU1vZHVsZS5teVZhclxuXG5cblxuZXhwb3J0cy5jb29yZGluYXRvckxheW91dCA9IG51bGxcbmV4cG9ydHMuc2Nyb2xsdmlldyA9IG51bGxcblxuZXhwb3J0cy5zY3JvbGxEaXJlY3Rpb24gPSBcblx0VVA6IFwidXBcIlxuXHRET1dOOiBcImRvd25cIlxuXG5leHBvcnRzLnNjcm9sbEJlaGF2aW91ciA9IFxuXHRBV0FZOiAwXG5cdFJFVFVSTjogMVxuXG5cbmxhc3RZID0gMFxuXG5leHBvcnRzLm1ha2UgPSAoKSAtPlxuXHRjb29yZGluYXRvckxheW91dCA9IG5ldyBMYXllclxuXHRcdHdpZHRoOiBTY3JlZW4ud2lkdGhcblx0XHRoZWlnaHQ6IFNjcmVlbi5oZWlnaHRcblx0XHRiYWNrZ3JvdW5kQ29sb3I6IFwidHJhbnNwYXJlbnRcIlxuXHRcdG5hbWU6IFwiY29vcmRpbmF0b3JMYXlvdXRcIlxuXG5cdGNvb3JkaW5hdG9yTGF5b3V0LnNjcm9sbGluZ0NoaWxkcmVuID0gW11cblxuXHRzY3JvbGx2aWV3ID0gbmV3IFNjcm9sbENvbXBvbmVudFxuXHRcdHdpZHRoOiBTY3JlZW4ud2lkdGhcblx0XHRoZWlnaHQ6IFNjcmVlbi5oZWlnaHRcblx0XHRzY3JvbGxIb3Jpem9udGFsOiBmYWxzZVxuXHRcdG5hbWU6IFwic2Nyb2xsdmlld1wiXG5cdFx0cGFyZW50OiBjb29yZGluYXRvckxheW91dFxuXG5cdGNvb3JkaW5hdG9yTGF5b3V0LnNjcm9sbHZpZXcgPSBzY3JvbGx2aWV3O1xuXG5cdHNjcm9sbHZpZXcuY29udGVudC5vbiBcImNoYW5nZTp5XCIsIC0+XG5cdFx0c2Nyb2xsWSA9IE1hdGgubWF4KE1hdGgubWluKHNjcm9sbHZpZXcuc2Nyb2xsWSwgc2Nyb2xsdmlldy5jb250ZW50LmhlaWdodC1zY3JvbGx2aWV3LmhlaWdodCksIDApXG5cdFx0ZGVsdGFZID0gc2Nyb2xsWSAtIGxhc3RZO1xuXHRcdCMgcHJpbnQgZGVsdGFZXG5cblx0XHQjIHByaW50IHNjcm9sbHZpZXcuZGlyZWN0aW9uXG5cdFx0Zm9yIGl0ZW0gaW4gY29vcmRpbmF0b3JMYXlvdXQuc2Nyb2xsaW5nQ2hpbGRyZW5cblxuXHRcdFx0aWYgaXRlbS5zY3JvbGxEaXJlY3Rpb24gPT0gZXhwb3J0cy5zY3JvbGxEaXJlY3Rpb24uVVAgJiYgaXRlbS5zY3JvbGxCZWhhdmlvdXIgPT0gZXhwb3J0cy5zY3JvbGxCZWhhdmlvdXIuUkVUVVJOXG5cdFx0XHRcdGl0ZW0ueSA9IE1hdGgubWluKE1hdGgubWF4KGl0ZW0ueS1kZWx0YVksIGl0ZW0uc3RpY2t5UG9pbnQpLCBNYXRoLm1heCgtc2Nyb2xsWStpdGVtLnN0YXJ0WSwgaXRlbS5yZXR1cm5ZKSlcblxuXHRcdFx0ZWxzZSBpZiBpdGVtLnNjcm9sbERpcmVjdGlvbiA9PSBleHBvcnRzLnNjcm9sbERpcmVjdGlvbi5VUCAmJiBpdGVtLnNjcm9sbEJlaGF2aW91ciA9PSBleHBvcnRzLnNjcm9sbEJlaGF2aW91ci5BV0FZXG5cdFx0XHRcdGl0ZW0ueSA9IE1hdGgubWF4KC1zY3JvbGxZK2l0ZW0uc3RhcnRZLCBpdGVtLnN0aWNreVBvaW50KVx0XG5cblxuXHRcdGxhc3RZID0gc2Nyb2xsWVxuXG5cblxuXG5cdGV4cG9ydHMuY29vcmRpbmF0b3JMYXlvdXQgPSBjb29yZGluYXRvckxheW91dFxuXHRleHBvcnRzLnNjcm9sbHZpZXcgPSBzY3JvbGx2aWV3XG5cblxuZXhwb3J0cy5hZGRTY3JvbGxpbmdDaGlsZCA9IChpdGVtLCBkaXJlY3Rpb24gPSAgZXhwb3J0cy5zY3JvbGxEaXJlY3Rpb24uVVAsIHN0aWNreVBvaW50ID0gaXRlbS5oZWlnaHQqLTEsIHNjcm9sbEJlaGF2aW91ciA9IGV4cG9ydHMuc2Nyb2xsQmVoYXZpb3VyLkFXQVksIHJldHVyblkgPSAwKSAtPlxuXHRpdGVtLnNjcm9sbERpcmVjdGlvbiA9IGRpcmVjdGlvblxuXHRpdGVtLnN0aWNreVBvaW50ID0gc3RpY2t5UG9pbnRcblx0aXRlbS5zY3JvbGxCZWhhdmlvdXIgPSBzY3JvbGxCZWhhdmlvdXJcblx0aXRlbS5zdGFydFkgPSBpdGVtLnlcblx0aXRlbS5yZXR1cm5ZID0gcmV0dXJuWVxuXHRleHBvcnRzLmNvb3JkaW5hdG9yTGF5b3V0LnNjcm9sbGluZ0NoaWxkcmVuLnB1c2goaXRlbSlcblx0ZXhwb3J0cy5jb29yZGluYXRvckxheW91dC5hZGRDaGlsZChpdGVtKSIsIiMgQWRkIHRoZSBmb2xsb3dpbmcgbGluZSB0byB5b3VyIHByb2plY3QgaW4gRnJhbWVyIFN0dWRpby4gXG4jIG15TW9kdWxlID0gcmVxdWlyZSBcIm15TW9kdWxlXCJcbiMgUmVmZXJlbmNlIHRoZSBjb250ZW50cyBieSBuYW1lLCBsaWtlIG15TW9kdWxlLm15RnVuY3Rpb24oKSBvciBteU1vZHVsZS5teVZhclxuXG5leHBvcnRzLm15VmFyID0gXCJteVZhcmlhYmxlXCJcblxuZXhwb3J0cy5teUZ1bmN0aW9uID0gLT5cblx0cHJpbnQgXCJteUZ1bmN0aW9uIGlzIHJ1bm5pbmdcIlxuXG5leHBvcnRzLm15QXJyYXkgPSBbMSwgMiwgM10iXX0=
